<?php
//非法访问
if (!defined('BASECHECK')){
	header("HTTP/1.1 404 Not Found");
	header("Status: 404 Not Found");
	exit;
}
/**
 * 应用系统配置
 *
 * @package		comnide
 * @author			B.I.T
 * @copyright		Copyright (c) 2016 - 2017.
 * @license
 * @link
 * @since				Version 1.17
 */

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 系统常量配置 
 * 请不要在此页面中添加系统非常量配置.
 * 如有一些非常量配置变量,请增加在custom_config.php中,并通过函数get_config('varname')加载
* ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

$basepath=str_replace("\\","/",realpath(dirname(__FILE__).'/../'));
$basename=substr($basepath, strrpos($basepath, '/')+1, strlen($basepath));

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用的配置文件目录
 * 存放应用配置。默认存在2个文件
 * custom_config.php 用来存放应用个性化配置
 * system_config.php 用来存放应用系统配置
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(APP_CFG_PATH,$basepath.'/'.CFG_PATH_NAME);

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用的控制器文件目录
 * 存放应用控制器(controller)
 * 控制器文件需要按照如下规则设计：
 * 1.每个控制器文件有且仅有一个控制器类。
 * 2.控制器文件名称与其内部的控制器类需要一致。即假设存在控制器类TestController，其控制器文件名必须是TestController.php。
 * 3.每个控制器必须继承自(extends)类Controller。
 * 4.控制器类命名方法采用首字母大写并拼接字符“Controller”的方式。如TestController，GetuserController等
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(CONTROLLER_PATH, $basepath.'/controller');

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用的模型目录
 * 存放应用模型(model)
 * 模型文件需要按照如下规则设计：
 * 1.每个模型文件有且仅有一个模型类。
 * 2.模型文件名称与其内部的模型类需要一致。即假设存在模型类TestModel，其模型文件名必须是TestModel.php。
 * 3.每个模型必须继承自(extends)类Model。
 * 4.模型类命名方法采用首字母大写并拼接字符“Model”的方式。如TestModel，GetuserModel等
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(MODEL_PATH, $basepath.'/model');

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用的核心函数目录
 * 存放公共函数，系统内置函数Common.php。每个应用(application)的Common都是独立运行的，相互不会干扰。
 * 系统会自动加载当前应用内的Common.php文件。
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(APP_CORE_PATH,$basepath.'/'.CORE_PATH_NAME);

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用的日志目录
 * 存放系统日志
* ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(APP_LOG_PATH,$basepath.'/'.LOG_PATH_NAME);

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用的视图主题(theme)目录
 * 存放应用视图的各种主题。用户可以通过定制不同的主题，实现多种视图展示效果。
 * 在控制器(controller)代码中可以通过$this->setThemes($theme_id);切换使用指定的视图主题。
 * 需要注意的是，此部分代码建议放置在控制器(controller)的初始化函数_init()内，以便于逻辑清晰正确。
 * 
 * 视图主题目录内按主题id作为目录分别存储与视图(view)相关的内容。如视图文件(view目录)，视图样式(css目录)，视图javascript脚本(js目录)等。
 * 其中视图文件目录是必要目录，每个主题目录下有且仅有一个视图文件目录(view)。
 * 视图文件命名规则如下：
 * 1.符合php文件命名规则的php文件。
 * 2.可以嵌套任意层目录。
 * 视图文件只可在控制器(controller)内被调用，调用方法如下:
 * 1.通过代码$this->render($view_name);即可。$view_name指所要引入的视图文件名，并不包含扩展名“.php“。
 * 2.假如视图嵌套在多层目录内，$view_name中增加相对的文件目录即可，如”dir1/dir2/view“。
 * 3.控制器(controller)可以将向视图(view)中传入数据，一边视图进行展现处理。方法是$this->render($view_name, array('param1'=>'a', 'param2'=>'b'));
 *   在视图(view)中直接使用$param1就可以获取值”a“了。
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(VIEW_THEMES_PATH,$basepath.'/themes');

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用的语言包(language)路径
 * 语言包可以支持用户扩展语言，支持i18n。
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(APP_LANG_PATH,$basepath.'/language');

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用的类库路径
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(APP_LIB_PATH,$basepath.'/'.LIB_PATH_NAME);

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用请求地址前缀。
 * 一般用于拼接http连接。
 * 如果http服务器使用地址重写(http rewrite)。可以通过修改此变量调整请求地址。
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(APP_URL_ROOT, HTTP_ROOT_PATH.'/'.$basename.'/index.php?');

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用主题目录。
 * 一般用于拼接http连接。
 * ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(APP_HTTP_ROOT, HTTP_ROOT_PATH.'/'.$basename.'/themes/');

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------
 * 当前应用目录名称
* ------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
define(APP_NAME, $basename);

unset($basename);
unset($basepath);
?>